version: '3.8'
services:
  web:
    build:
      context: .

      args:
        NODE_ENV: "${NODE_ENV}"
        NODE_WORKDIR: "${NODE_WORKDIR}"
        NODE_PORT: "${NODE_PORT}"

    volumes:
      - ./:${NODE_WORKDIR}
    ports:
      - "${NODE_PORT}:${NODE_PORT}"

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB_NAME}"

    ports:
      - "${POSTGRES_DB_OUTER_PORT}:${POSTGRES_DB_INNER_PORT}"
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  web-prod:
    build:
      context: .

      args:
        NODE_ENV: "${NODE_ENV}"
        NODE_WORKDIR: "${NODE_WORKDIR}"
        NODE_PORT: "${NODE_PORT}"

    volumes:
      - ./:${NODE_WORKDIR}
    ports:
      - "${NODE_PORT}:${NODE_PORT}"

  db-prod:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB_NAME}"

    ports:
      - "${POSTGRES_DB_OUTER_PORT}:${POSTGRES_DB_INNER_PORT}"
    volumes:
      - db-production:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    command: -p ${POSTGRES_DB_INNER_PORT}

volumes:
  db: {}
  db-production: {}
